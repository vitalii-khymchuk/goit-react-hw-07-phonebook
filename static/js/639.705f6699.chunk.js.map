{"version":3,"file":"static/js/639.705f6699.chunk.js","mappings":"4RAEMA,EAAgBC,EAAAA,EAAAA,IAAH,wKAWbC,EAAOD,EAAAA,EAAAA,EAAH,mIAQJE,EAAOF,EAAAA,EAAAA,EAAH,oEAKJG,EAAeH,EAAAA,EAAAA,IAAH,iPAaZI,EAASJ,EAAAA,EAAAA,IAAH,6FAMNK,EAAUL,EAAAA,EAAAA,OAAH,4P,mECiEb,EAnFoB,WAAO,IAAD,IAChBM,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUP,GAASQ,EAAAA,EAAAA,IAAeV,IACxC,OAAO,WACLS,EAAQE,QACRT,GAASU,EAAAA,EAAAA,KACV,CACF,GAAE,CAACV,EAAUF,IACd,IAdkBa,EAcZC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IACpBC,GAAeJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEzBC,EAA0CF,EAA1CE,OAAQC,EAAkCH,EAAlCG,UAAWC,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,KAAMC,EAAUN,EAAVM,MAClCC,EAAgBZ,IAAcO,EAASM,EAAoBN,EAC3DO,EAAQ,oBAAGtB,EAASuB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiBzC,OACE,SAAC,KAAD,CACEC,QAAQ,OACRC,iBAAiB,YACjBC,MAAO,IACPC,OAAQ,IACRC,OAAO,kBACPC,GAAG,OANL,UAQE,iCACE,UAAC,KAAD,CAAKC,GAAG,OAAOC,SAAS,WAAxB,WACE,UAACxC,EAAD,YACE,SAACC,EAAD,CAASwC,KAAK,SAASC,QAlBb,WAClBpC,EAAS,cAAe,CACtByB,OAAM,kBAAMvB,EAASuB,OAAhB,IAAuBV,aAAAA,KAE/B,EAcS,mBAGA,SAACpB,EAAD,CAASwC,KAAK,SAASC,QA7BX,WACpBtC,GAASuC,EAAAA,EAAAA,IAAczC,IACvBI,EAASwB,EAAU,CAAEc,SAAS,EAAMb,MAAOvB,EAASuB,OACrD,EA0BS,qBAGA,SAAC9B,EAAD,CAASwC,KAAK,SAASC,QA5Bb,WAClBpC,EAASwB,EAAU,CAAEC,MAAOvB,EAASuB,OACtC,EA0BS,sBAIF,SAACpC,EAAD,CAAekD,IAAKjB,EAAekB,IAAG,UAAKpB,EAAL,kBAEvCP,IAAS,SAAC4B,EAAA,EAAD,CAAOC,IAAK7B,KACpBH,IAAcG,IACd,UAAC,KAAD,CAAK8B,GAAG,OAAOC,GAAG,OAAlB,WACE,SAACrD,EAAD,UAAO6B,KACP,UAAC3B,EAAD,CAAc2C,QA5CJ,kBAAMS,EAAAA,EAAAA,GAASxB,EAAf,EA4CV,WACE,SAAC7B,EAAD,UAAO6B,KACP,SAAC,MAAD,CAAeyB,KAAM,QAEtB3B,IACC,UAAC1B,EAAD,CAAc2C,QAhDL,kBAAMW,EAAAA,EAAAA,GAAW5B,EAAjB,EAgDT,WACE,SAAC3B,EAAD,UAAO2B,KACP,SAAC,MAAD,CAAe2B,KAAM,SAGzB,UAACtD,EAAD,2BACc,kBADd,KA3EQiB,EA4E0BS,EA5ElB,IAAI8B,KAAKvC,GAAMwC,4BAmF1C,C","sources":["Pages/ContactInfo/ContactInfo.styled.jsx","Pages/ContactInfo/ContactInfo.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ProfileAvatar = styled.img`\n  height: 150px;\n  width: 150px;\n  position: absolute;\n  bottom: 0;\n  right: 50px;\n  transform: translateY(50%);\n\n  border-radius: 50%;\n`;\n\nconst Name = styled.p`\n  overflow: hidden;\n  max-width: 260px;\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 60px;\n`;\n\nconst Info = styled.p`\n  font-size: 24px;\n  margin-bottom: 15px;\n`;\n\nconst CallEmailBtn = styled.div`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  border-radius: 5px;\n  &:focus,\n  &:hover {\n    background-color: rgba(100, 100, 100, 0.2);\n  }\n`;\n\nconst NavBar = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst NavItem = styled.button`\n  padding: 5px;\n  font-size: 16px;\n  color: white;\n  border-radius: 10px;\n  background-color: transparent;\n  border: none;\n  &:hover,\n  &:focus {\n    color: orange;\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport { ProfileAvatar, Name, Info, CallEmailBtn, NavBar, NavItem };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getContactInfo, deleteContact } from 'redux/operations';\nimport { clearContactsInfo } from 'redux/contacts/contactsSlice';\nimport {\n  selectContactInfo,\n  selectIsContactsLoading,\n  selectContactsError,\n} from 'redux/contacts/selectors';\nimport {\n  ProfileAvatar,\n  Name,\n  Info,\n  CallEmailBtn,\n  NavBar,\n  NavItem,\n} from './ContactInfo.styled';\nimport { IoCallOutline } from 'react-icons/io5';\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { makeCall, writeEmail } from 'utils/phoneAPI';\nimport { Box } from 'components/reusableComponents';\nimport avatarPlaceholder from 'photos/avatarIsLoading.gif';\nimport Error from 'components/Error';\n\nconst formateDate = date => new Date(date).toLocaleString();\n\nconst ContactInfo = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const promise = dispatch(getContactInfo(id));\n    return () => {\n      promise.abort();\n      dispatch(clearContactsInfo());\n    };\n  }, [dispatch, id]);\n  const isLoading = useSelector(selectIsContactsLoading);\n  const error = useSelector(selectContactsError);\n  const contactsInfo = useSelector(selectContactInfo);\n\n  const { avatar, createdAt, email, name, phone } = contactsInfo;\n  const profileAvatar = isLoading || !avatar ? avatarPlaceholder : avatar;\n  const backPath = location.state?.from ?? '/';\n  const onCallClick = () => makeCall(phone);\n  const onEmailClick = () => writeEmail(email);\n  const onDeleteClick = () => {\n    dispatch(deleteContact(id));\n    navigate(backPath, { replace: true, state: location.state });\n  };\n  const onBackClick = () => {\n    navigate(backPath, { state: location.state });\n  };\n\n  const onEditClick = () => {\n    navigate(`/edit/&{id}`, {\n      state: { ...location.state, contactsInfo },\n    });\n  };\n\n  return (\n    <Box\n      display=\"grid\"\n      gridTemplateRows=\"200px 1fr\"\n      width={480}\n      height={800}\n      border=\"1px solid black\"\n      mx=\"auto\"\n    >\n      <>\n        <Box bg=\"grey\" position=\"relative\">\n          <NavBar>\n            <NavItem type=\"button\" onClick={onEditClick}>\n              Edit\n            </NavItem>\n            <NavItem type=\"button\" onClick={onDeleteClick}>\n              Delete\n            </NavItem>\n            <NavItem type=\"button\" onClick={onBackClick}>\n              Back\n            </NavItem>\n          </NavBar>\n          <ProfileAvatar src={profileAvatar} alt={`${name}'s avatar`} />\n        </Box>\n        {error && <Error msg={error} />}\n        {!isLoading && !error && (\n          <Box mt=\"10px\" px=\"15px\">\n            <Name>{name}</Name>\n            <CallEmailBtn onClick={onCallClick}>\n              <Info>{phone}</Info>\n              <IoCallOutline size={24} />\n            </CallEmailBtn>\n            {email && (\n              <CallEmailBtn onClick={onEmailClick}>\n                <Info>{email}</Info>\n                <AiOutlineMail size={24} />\n              </CallEmailBtn>\n            )}\n            <Info>\n              Created at: <br /> {formateDate(createdAt)}\n            </Info>\n          </Box>\n        )}\n      </>\n    </Box>\n  );\n};\n\nexport default ContactInfo;\n"],"names":["ProfileAvatar","styled","Name","Info","CallEmailBtn","NavBar","NavItem","id","useParams","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useEffect","promise","getContactInfo","abort","clearContactsInfo","date","isLoading","useSelector","selectIsContactsLoading","error","selectContactsError","contactsInfo","selectContactInfo","avatar","createdAt","email","name","phone","profileAvatar","avatarPlaceholder","backPath","state","from","display","gridTemplateRows","width","height","border","mx","bg","position","type","onClick","deleteContact","replace","src","alt","Error","msg","mt","px","makeCall","size","writeEmail","Date","toLocaleString"],"sourceRoot":""}